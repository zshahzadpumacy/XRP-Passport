<!DOCTYPE html>
<html>
<head><meta charset="utf-8"><title>KYC Demo</title></head>
<body>
  <h1>Verify your identity</h1>
  <div id="sumsub-root"></div>

  <!-- inject globals -->
  <script>
    window.__SUMSUB_TOKEN__ = "<%= sdkToken %>";
    window.__USER_ID__      = "<%= userId %>";
  </script>

  <!-- âœ… load the SDK bundle that already exposes window.snsWebSdk -->
  <script src="https://static.sumsub.com/idensic/static/sns-websdk-builder.js"></script>

  <!-- your init code -->
  <script>
    // Debug info
    console.log('Token available:', !!window.__SUMSUB_TOKEN__);
    console.log('User ID:', window.__USER_ID__);
    
    // Wait for SDK to load with timeout
    let retryCount = 0;
    const maxRetries = 10;
    
    function initSumsub() {
      if (typeof snsWebSdk === 'undefined') {
        retryCount++;
        if (retryCount > maxRetries) {
          console.error('snsWebSdk failed to load after', maxRetries, 'retries');
          document.getElementById('sumsub-root').innerHTML = `
            <div style="padding: 20px; border: 1px solid #ccc; background: #f9f9f9;">
              <h3>SDK Loading Failed</h3>
              <p>The Sumsub SDK could not be loaded. This might be due to:</p>
              <ul>
                <li>Network connectivity issues</li>
                <li>Firewall blocking external resources</li>
                <li>CDN being unavailable</li>
              </ul>
              <p>Please check your network connection and try refreshing the page.</p>
            </div>
          `;
          return;
        }
        console.log(`snsWebSdk not loaded. Retry ${retryCount}/${maxRetries}...`);
        setTimeout(initSumsub, 2000);
        return;
      }

      const token  = window.__SUMSUB_TOKEN__;
      const userId = window.__USER_ID__;

      if (!token) {
        console.error('No token available');
        return;
      }

      const refresh = () =>
        fetch(`/refreshToken?userId=${userId}&levelName=basic-kyc-de`)
          .then(r => r.text());

      try {
        // Use the correct SDK 2.0 initialization pattern
        let snsWebSdkInstance = snsWebSdk
          .init(token, refresh)
          .withConf({
            lang: "en"
          })
          .withOptions({ 
            addViewportTag: false, 
            adaptIframeHeight: true 
          })
          .on("idCheck.onStepCompleted", (payload) => {
            console.log("onStepCompleted", payload);
          })
          .on("idCheck.onError", (error) => {
            console.log("onError", error);
          })
          .onMessage((type, payload) => {
            console.log("onMessage", type, payload);
          })
          .build();
        
        snsWebSdkInstance.launch("#sumsub-root");
        console.log('Sumsub SDK initialized successfully');
      } catch (error) {
        console.error('Failed to initialize Sumsub SDK:', error);
      }
    }

    // Start initialization when page loads
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initSumsub);
    } else {
      initSumsub();
    }
  </script>
</body>
</html>
