<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Verifiable Credential Viewer</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background: white;
            border-radius: 10px;
            padding: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
            text-align: center;
            margin-bottom: 30px;
        }
        .search-section {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 8px;
        }
        input[type="text"] {
            padding: 12px 20px;
            font-size: 16px;
            border: 2px solid #ddd;
            border-radius: 5px;
            width: 300px;
            margin-right: 10px;
        }
        button {
            padding: 12px 24px;
            font-size: 16px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #0056b3;
        }
        .credential-display {
            margin-top: 30px;
        }
        .credential-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 25px;
            border-radius: 15px;
            margin-bottom: 20px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }
        .credential-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        .status-badge {
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: bold;
            font-size: 14px;
        }
        .status-verified {
            background-color: #28a745;
        }
        .status-failed {
            background-color: #dc3545;
        }
        .credential-details {
            background: rgba(255,255,255,0.1);
            padding: 20px;
            border-radius: 10px;
            margin: 15px 0;
        }
        .detail-row {
            display: flex;
            justify-content: space-between;
            margin: 10px 0;
            padding: 8px 0;
            border-bottom: 1px solid rgba(255,255,255,0.2);
        }
        .detail-label {
            font-weight: bold;
            color: #e0e0e0;
        }
        .detail-value {
            color: #ffffff;
        }
        .json-viewer {
            background: #2d3748;
            color: #e2e8f0;
            padding: 20px;
            border-radius: 8px;
            font-family: 'Courier New', monospace;
            font-size: 14px;
            overflow-x: auto;
            margin-top: 20px;
        }
        .error-message {
            background-color: #f8d7da;
            color: #721c24;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
            text-align: center;
        }
        .success-message {
            background-color: #d4edda;
            color: #155724;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
            text-align: center;
        }
        .tabs {
            display: flex;
            margin-bottom: 20px;
        }
        .tab {
            padding: 10px 20px;
            background: #e9ecef;
            border: none;
            cursor: pointer;
            border-radius: 5px 5px 0 0;
            margin-right: 5px;
        }
        .tab.active {
            background: #007bff;
            color: white;
        }
        .tab-content {
            display: none;
        }
        .tab-content.active {
            display: block;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üîê Verifiable Credential Viewer</h1>
        
        <div class="search-section">
            <input type="text" id="userId" placeholder="Enter User ID (e.g., zsa-123)" value="zsa-123">
            <button onclick="loadCredential()">Load Credential</button>
            <button onclick="loadPresentation()">Load Presentation</button>
        </div>

        <div id="credentialDisplay" class="credential-display"></div>
    </div>

    <script>
        async function loadCredential() {
            const userId = document.getElementById('userId').value;
            if (!userId) {
                showError('Please enter a User ID');
                return;
            }

            try {
                const response = await fetch(`/credential/${userId}`);
                const data = await response.json();

                if (response.ok) {
                    displayCredential(data.credential, data.didDocument);
                } else {
                    showError(data.error || 'Credential not found');
                }
            } catch (error) {
                showError('Error loading credential: ' + error.message);
            }
        }

        async function loadPresentation() {
            const userId = document.getElementById('userId').value;
            if (!userId) {
                showError('Please enter a User ID');
                return;
            }

            try {
                const response = await fetch(`/credential/${userId}/presentation`);
                const data = await response.json();

                if (response.ok) {
                    displayPresentation(data.presentation, data.didDocument);
                } else {
                    showError(data.error || 'Presentation not found');
                }
            } catch (error) {
                showError('Error loading presentation: ' + error.message);
            }
        }

        function displayCredential(credential, didDocument) {
            const display = document.getElementById('credentialDisplay');
            const status = credential.credentialSubject.kycVerification.status;
            const statusClass = status === 'GREEN' ? 'status-verified' : 'status-failed';
            const statusText = status === 'GREEN' ? 'VERIFIED' : 'FAILED';

            display.innerHTML = `
                <div class="credential-card">
                    <div class="credential-header">
                        <h2>üé´ KYC Verification Credential</h2>
                        <span class="status-badge ${statusClass}">${statusText}</span>
                    </div>
                    
                    <div class="credential-details">
                        <div class="detail-row">
                            <span class="detail-label">Credential ID:</span>
                            <span class="detail-value">${credential.id}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Issuer:</span>
                            <span class="detail-value">${credential.issuer}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Issuance Date:</span>
                            <span class="detail-value">${new Date(credential.issuanceDate).toLocaleString()}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Expiration Date:</span>
                            <span class="detail-value">${new Date(credential.expirationDate).toLocaleString()}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Subject ID:</span>
                            <span class="detail-value">${credential.credentialSubject.id}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Verification Level:</span>
                            <span class="detail-value">${credential.credentialSubject.kycVerification.verificationLevel}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Verification Date:</span>
                            <span class="detail-value">${new Date(credential.credentialSubject.kycVerification.verificationDate).toLocaleString()}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Applicant ID:</span>
                            <span class="detail-value">${credential.credentialSubject.kycVerification.applicantId}</span>
                        </div>
                    </div>

                    <div class="tabs">
                        <button class="tab active" onclick="showTab('credential')">Credential</button>
                        <button class="tab" onclick="showTab('did')">DID Document</button>
                        <button class="tab" onclick="showTab('raw')">Raw JSON</button>
                    </div>

                    <div id="credential-tab" class="tab-content active">
                        <div class="json-viewer">${JSON.stringify(credential, null, 2)}</div>
                    </div>

                    <div id="did-tab" class="tab-content">
                        <div class="json-viewer">${JSON.stringify(didDocument, null, 2)}</div>
                    </div>

                    <div id="raw-tab" class="tab-content">
                        <div class="json-viewer">${JSON.stringify(credential, null, 2)}</div>
                    </div>
                </div>
            `;
        }

        function displayPresentation(presentation, didDocument) {
            const display = document.getElementById('credentialDisplay');
            
            display.innerHTML = `
                <div class="credential-card">
                    <div class="credential-header">
                        <h2>üìã Verifiable Presentation</h2>
                        <span class="status-badge status-verified">PRESENTATION</span>
                    </div>
                    
                    <div class="credential-details">
                        <div class="detail-row">
                            <span class="detail-label">Holder:</span>
                            <span class="detail-value">${presentation.holder}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Credential ID:</span>
                            <span class="detail-value">${presentation.verifiableCredentialId}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">Type:</span>
                            <span class="detail-value">${presentation.type.join(', ')}</span>
                        </div>
                    </div>

                    <div class="tabs">
                        <button class="tab active" onclick="showTab('presentation')">Presentation</button>
                        <button class="tab" onclick="showTab('did')">DID Document</button>
                        <button class="tab" onclick="showTab('raw')">Raw JSON</button>
                    </div>

                    <div id="presentation-tab" class="tab-content active">
                        <div class="json-viewer">${JSON.stringify(presentation, null, 2)}</div>
                    </div>

                    <div id="did-tab" class="tab-content">
                        <div class="json-viewer">${JSON.stringify(didDocument, null, 2)}</div>
                    </div>

                    <div id="raw-tab" class="tab-content">
                        <div class="json-viewer">${JSON.stringify(presentation, null, 2)}</div>
                    </div>
                </div>
            `;
        }

        function showTab(tabName) {
            // Hide all tab contents
            const tabContents = document.querySelectorAll('.tab-content');
            tabContents.forEach(content => content.classList.remove('active'));

            // Remove active class from all tabs
            const tabs = document.querySelectorAll('.tab');
            tabs.forEach(tab => tab.classList.remove('active'));

            // Show selected tab content
            document.getElementById(tabName + '-tab').classList.add('active');
            
            // Add active class to clicked tab
            event.target.classList.add('active');
        }

        function showError(message) {
            const display = document.getElementById('credentialDisplay');
            display.innerHTML = `<div class="error-message">‚ùå ${message}</div>`;
        }

        function showSuccess(message) {
            const display = document.getElementById('credentialDisplay');
            display.innerHTML = `<div class="success-message">‚úÖ ${message}</div>`;
        }

        // Load credential on page load if userId is provided
        window.onload = function() {
            const urlParams = new URLSearchParams(window.location.search);
            const userId = urlParams.get('userId');
            if (userId) {
                document.getElementById('userId').value = userId;
                loadCredential();
            }
        };
    </script>
</body>
</html> 